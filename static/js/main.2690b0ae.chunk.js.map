{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","id","className","href","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qOAqHeA,MAjHf,WACE,OACE,6BAASC,GAAG,WACV,4BAAQA,GAAG,UACT,yBAAKC,UAAU,iBACb,wBAAIA,UAAU,QACZ,uBAAGC,KAAK,KAAR,SAEF,yBAAKF,GAAG,MAAMC,UAAU,IACtB,uBAAGC,KAAK,IAAID,UAAU,WAAWD,GAAG,WAClC,qDAEF,yBAAKC,UAAU,YACb,4BACE,4BACE,uBAAGC,KAAK,cAAR,UAEF,wBAAID,UAAU,UACZ,uBAAGC,KAAK,gBAAR,YAGF,4BACE,uBAAGA,KAAK,kBAAR,cAEF,4BACE,uBAAGA,KAAK,gBAAR,aAGJ,uBAAGD,UAAU,QAAb,4CAKR,yBAAKD,GAAG,aACN,yBAAKC,UAAU,eACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,OAAd,4DACc,oFAEd,uBAAGA,UAAU,QAAb,uHAGJ,yBAAKA,UAAU,cACb,yBAAKA,UAAU,iBACb,4BACE,wBAAIA,UAAU,QACZ,yBAAKA,UAAU,QACf,yBAAKA,UAAU,QACb,yBAAKA,UAAU,SACb,0BAAMA,UAAU,OAAhB,MACA,wBAAIA,UAAU,OAAd,gDACA,uBAAGA,UAAU,QAAb,wGAEE,oKAOR,wBAAIA,UAAU,UACZ,yBAAKA,UAAU,QACf,yBAAKA,UAAU,QACb,yBAAKA,UAAU,SACb,0BAAMA,UAAU,OAAhB,MACA,wBAAIA,UAAU,OAAd,gDACA,uBAAGA,UAAU,QAAb,6GAEE,0JAQd,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,OAAd,qDACY,oFAEZ,uBAAGA,UAAU,QAAb,oGAIN,4BAAQD,GAAG,UACT,yBAAKC,UAAU,iBACb,0BAAMA,UAAU,QACd,uBAAGC,KAAK,KAAR,SAEF,uBAAGD,UAAU,QAAb,wCACA,yBAAKA,UAAU,WACb,4BACE,wBAAIA,UAAU,QAAd,iIAGA,wBAAIA,UAAU,OACZ,uBAAGC,KAAK,KAAR,iBAEF,wBAAID,UAAU,SACZ,uBAAGC,KAAK,KAAR,2BAMV,uBAAGA,KAAK,IAAID,UAAU,eACpB,iDCnGYE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.2690b0ae.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <section id=\"wrapper\">\n      <header id=\"header\">\n        <div className=\"wrap-contents\">\n          <h1 className=\"logo\">\n            <a href=\"#\">tliz</a>\n          </h1>\n          <nav id=\"gnb\" className=\"\">\n            <a href=\"#\" className=\"btn-menu\" id=\"btnMenu\">\n              <span>mobile menu button</span>\n            </a>\n            <div className=\"gnb-list\">\n              <ul>\n                <li>\n                  <a href=\"about.html\">ABOUT</a>\n                </li>\n                <li className=\"active\">\n                  <a href=\"service.html\">SERVICE</a>\n                </li>\n\n                <li>\n                  <a href=\"portfolio.html\">PORTFOLIO</a>\n                </li>\n                <li>\n                  <a href=\"request.html\">REQUEST</a>\n                </li>\n              </ul>\n              <p className=\"copy\">© 2020 TRIZ. All Rights Reserved.</p>\n            </div>\n          </nav>\n        </div>\n      </header>\n      <div id=\"container\">\n        <div className=\"main-visual\">\n          <div className=\"wrap-contents\">\n            <h2 className=\"tit\">\n              고객 가치를 우선하는 <span>크리에이티브 그룹</span>\n            </h2>\n            <p className=\"desc\">테스트 테스트용 부제목 테스트 영역입니다.</p>\n          </div>\n        </div>\n        <div className=\"comp-intro\">\n          <div className=\"wrap-contents\">\n            <ul>\n              <li className=\"cont\">\n                <div className=\"pic\"></div>\n                <div className=\"info\">\n                  <div className=\"inner\">\n                    <span className=\"num\">01</span>\n                    <h3 className=\"tit\">영상 컨텐츠 제작</h3>\n                    <p className=\"desc\">\n                      포토,브랜디드 컨텐츠, 캠페인 영상까지\n                      <span>\n                        디지털 기반의 통합 마케팅 솔루션을 제공합니다.\n                      </span>\n                    </p>\n                  </div>\n                </div>\n              </li>\n              <li className=\"social\">\n                <div className=\"pic\"></div>\n                <div className=\"info\">\n                  <div className=\"inner\">\n                    <span className=\"num\">02</span>\n                    <h3 className=\"tit\">소셜 미디어 운영</h3>\n                    <p className=\"desc\">\n                      페이스북, 인스타그램, 블로그 등 SNS를 통한\n                      <span>유저들과의 긴밀한 소통 채널을 운영합니다.</span>\n                    </p>\n                  </div>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div className=\"comp-intor-project\">\n          <div className=\"wrap-contents\">\n            <h3 className=\"tit\">\n              트리즈 스튜디오가 <span>함께 만들어갑니다</span>\n            </h3>\n            <p className=\"desc\">지금 바로 프로젝트를 문의해보세요</p>\n          </div>\n        </div>\n      </div>\n      <footer id=\"footer\">\n        <div className=\"wrap-contents\">\n          <span className=\"logo\">\n            <a href=\"#\">tilz</a>\n          </span>\n          <p className=\"copy\">© 2020 TRIZ. All Rights Reserved.</p>\n          <div className=\"address\">\n            <ul>\n              <li className=\"addr\">\n                서울특별시 서초구 강남대로 369 에이플러스 에셋 7F\n              </li>\n              <li className=\"tel\">\n                <a href=\"#\">02-6959-3306</a>\n              </li>\n              <li className=\"email\">\n                <a href=\"#\">contact@triz.co.kr</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </footer>\n      <a href=\"#\" className=\"btn-contact\">\n        <span>문의</span>\n      </a>\n    </section>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}